name: Docker Image CI

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker-compose build api
    - name: Run tests
      run: docker-compose run api python manage.py test

  update:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v2
        name: Checkout Split repository
        with:
          repository: split2021/Split
          ref: pre-prod
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.SPLIT_BOT_TOKEN }}
      - name: Create merging branch
        run: git checkout -b "merge_${{ github.sha }}"
      - name: Update API submodule
        run: git submodule foreach git pull origin master
      - name: Add changes
        run: git add .
<<<<<<< HEAD
      - name: Push updates
        run: git push origin "merge_${{ github.sha }}"
      - name: Create pull request
        shell: bash
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          bin/hub pull-request -m "Update API to commit ${{ github.sha }}" --message "Pull request automatically created by Github action after all tests for the API repository (https://github.com/split2021/API) passed successfully. It should only update the api submodule to the commit ${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.SPLIT_BOT_TOKEN }}

      - name: Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.${{ github.run_number }}
          release_name:
          body: |
            List of changes:
            -
            -
          draft: false
          prerelease: false
=======
      - name: Create pull request
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.SPLIT_BOT_TOKEN }}
          title: "Update API to commit ${{ github.sha }}"
>>>>>>> Using peter-evans pull request creator
